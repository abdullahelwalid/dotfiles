#!/usr/bin/env bash

# Symlinks files stored in $HOME/.config (i.e. in a subversion repository)
# to their correct location--mostly $HOME, but a few other directories
# as well, like $HOME/.subversion/config.
#
# This command is idempotent; you can safely run it more than once.

# From http://stackoverflow.com/a/246128/11543
SRCDIR="$( cd -P "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

if [ -d "$1" ]; then
  DSTDIR="$1"
else
  DSTDIR="$( cd -P "$( dirname "${SRCDIR}" )" && pwd )"
fi

# Echoes, then runs the command.  Unfortunately we end up with
# "set +x" in the log, but more reliable than the alternatives...
# See http://stackoverflow.com/q/12231792/11543

function x {

  local PS4="$ "
  set -x
  "$@"
  set +x

}

# "dotfiles" that will end up in $HOME

for f in gls ls ; do

  if [ -x "$(which $f)" ]; then
     LS=$f
     break
  fi

done

cd "$SRCDIR/home"

# @TODO Remove links that have been deleted from $CONFIGROOT/home

for f in `$LS -AB` ; do # substitution not supported with the $(...) style

  if [ "$f" = "CVS" ]; then
    continue
  fi

  if [ "$f" = ".svn" ]; then
    continue
  fi
  
  if [ "$f" = ".git" ]; then
    continue
  fi
  
  if [[ "$f" =~ "~$" ]]; then
    continue
  fi
  
  if [ ! -L "$DSTDIR/$f" ]; then
    x ln -sf "${SRCDIR#$DSTDIR/}/home/$f" "$DSTDIR"
  fi

done

# Subversion

if [ ! -L "$DSTDIR/.subversion/config" ]; then
  x rm -f "$DSTDIR/.subversion/config"
  x mkdir -p "$DSTDIR/.subversion"
  x ln -sf "$SRCDIR/etc/subversion/config" "$DSTDIR/.subversion/config"
fi

# CPAN configuration

if [ ! -L "$DSTDIR/.cpan/CPAN/MyConfig.pm" ]; then
  x rm -f "$DSTDIR/.cpan/CPAN/MyConfig.pm"
  x mkdir -p "$DSTDIR/.cpan/CPAN"
  x ln -sf "$SRCDIR/etc/CPAN/MyConfig.pm" "$DSTDIR/.cpan/CPAN/MyConfig.pm"
fi

# Sublime Text 2

if [ `which subl` ]; then

  if [ `$DSTDIR/.platform` = "linux" ]; then
    DST="$DSTDIR/.config/sublime-text-2/Packages/User"
  else
    DST="$DSTDIR/Library/Application Support/Sublime Text 2/Packages/User"
  fi
      
  if [ ! -L "$DST/Preferences.sublime-settings" ]; then
    x mkdir -p "$DST"
    x rm -f "$DST/Preferences.sublime-settings"
    x ln -sf "$SRCDIR/etc/subl/Preferences.sublime-settings" "$DST/Preferences.sublime-settings"
  fi

  for d in Linux OSX Windows ; do
    if [ ! -L "$DST/Default ($d).sublime-keymap" ]; then
      x rm -f "$DST/Default ($d).sublime-keymap"
      x ln -sf "$SRCDIR/etc/subl/Default.sublime-keymap" "$DST/Default ($d).sublime-keymap"
    fi
  done
  
fi

# Key bindings

case `$DSTDIR/.platform` in

  darwin )
    # For some reason *some* applications (like TextEdit) won't read
    # DefaultKeyBinding.dict if it's symlinked, or is in a symlinked directory,
    # so rsync instead of symlink... http://apple.stackexchange.com/a/53110/890
    # rdar://12429092
    x rsync -va --delete "$SRCDIR/etc/KeyBindings" "$DSTDIR/Library"
    ;;
    
esac

# Fonts

case `$DSTDIR/.platform` in

  darwin )
    # $DSTDIR/Library/Fonts is special, and can't be removed, so rsync 
    # instead of symlink
    x rsync -va --delete "$SRCDIR/etc/Fonts/" "$DSTDIR/Library/Fonts/"
    ;;
    
  linux )
    x rsync -va --delete "$SRCDIR/etc/Fonts/" /usr/local/share/fonts/
    ;;
    
esac

# Scripts from the bin directory

for f in $SRCDIR/bin/* ; do
  if [ ! -f "/usr/local/bin/$(basename $f)" ] ; then
    x ln -s $f "/usr/local/bin/$(basename $f)"
  fi
done

# git

# HACK! .gitconfig expects the templates to be in ~/.config/templates (hard-
# coded; .gitconfig doesn't seem to support any sort of variable expansion), so
# if the bulk of the files are stored elsewhere (because ~/.config is already
# used, as on Ubuntu), create a symlink from ~/.config/templates to the real
# location.  (Hack because we're otherwise able to install in any directory.)

# Might be possible to fix this via http://git-scm.com/docs/git-config#_includes.

if [ ! -d "$HOME/.config/templates" ]; then
  x ln -s "$SRCDIR/templates" "$HOME/.config/templates"
fi

if [ ! -d "$HOME/.config/fish" ]; then
  x mkdir -p "$HOME/.config"
  x ln -s "$SRCDIR/fish" "$HOME/.config/fish"
fi

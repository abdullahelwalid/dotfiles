#!/usr/bin/env bash

# Geotags image files in input directory using GPX tracks uploaded to
# iCloud by https://itunes.apple.com/gb/app/geotag-photos-pro-2/id1008694552?mt=8

# Usage:
#
# 1. Set camera time to time shown on GeotagPhotos2 launch screen.
#    (Preferably, take photo of screen itself too.)
# 2. Take photos.
# 3. Run photos-geotag, and pass negative of UTC offset given on
#    GeotagPhotos2 launch screen as second argument. For example,
#    if it reads "UTC+1", use "photos-geotag . -01:00:00"
# 4. Use preview or similar to check that tagged location matches
#    reality.

# It's safe to run this command multiple times until the geotags match
# up with reality; exiftool writes separate "GPS" time stamps to the
# metadata, while leaving the original times alone.

# Debugging
#
# exiftool -time:all                       # view time metadata
# exiftool -overwrite_original -gps:all= . # remove gps metadata
# exiftool -a -gps:all                     # read gps metadata

EXIFTOOL=exiftool
GPXDIR="$HOME/Library/Mobile Documents/iCloud~com~tappytaps~geotagphotos2/Documents"

if [ $# -eq 0 ]; then
#  echo "usage: $(basename $0) dir [+-hh:mm:ss] # delta = computer_t - photo_t, see http://bit.ly/2wkvvhF"
  echo "usage: $(basename $0) dir [+-hh:mm:ss] # delta = -1 * Geotag Photos 2 offset, see http://bit.ly/2wkvvhF"
  exit 1
fi  

if ! which -s "$EXIFTOOL" ; then
  echo "error: [$EXIFTOOL] not found"
  exit 1
fi

if ! test -d "$GPXDIR" ; then
  echo "error: [$GPXDIR] not found"
fi

if ! test -d "$1" ; then
  echo "error: [$1] is not a directory"
  exit 1
fi

if test -n "$2" ; then
  env TZ= exiftool -overwrite_original -geotag "$GPXDIR/*.gpx" -api GeoMaxIntSecs=28800 -geosync="$2" "$1"
else
  env TZ= exiftool -overwrite_original -geotag "$GPXDIR/*.gpx" -api GeoMaxIntSecs=28800 "$1"
fi

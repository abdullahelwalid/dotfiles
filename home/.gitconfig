# -*- sh -*-

# Documented in git-config(1).

[user]
    name = Michael Stillwell
    email = mjs@beebo.org

[core]
    excludesfile = ~/.gitignore

[diff]
    mnemonicprefix = true

[alias]
    # e.g. git expand vlog -> log --name-status
    expand = "!f() { git config --get alias.\"$1\"; }; f"
    # http://blog.apiaxle.com/post/handy-git-tips-to-stop-you-getting-fired/
    ours   = '!f() { git checkout --ours "$@" && git add "$@"; }; f'
    theirs = '!f() { git checkout --theirs "$@" && git add "$@"; }; f'
    hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
    vlog = log --name-status
    # Show the object type
    type = cat-file -t
    # e.g. git dump master:path/to/file.txt
    dump = cat-file -p
    stat = status -sb
    svnpull = !git diff --no-ext-diff --quiet --exit-code && ( git svn fetch && git svn rebase ) || ( git stash && git svn fetch && git svn rebase && git stash pop )
    svnpush = !git diff --no-ext-diff --quiet --exit-code && ( git svn dcommit ) || ( git stash && git svn dcommit && git stash pop )
    resethard = reset --hard HEAD
    # Delete untracked files and directories (doesn't work if no commit...)
    resetharder = !git reset --hard HEAD && git clean -df
    # Delete ignored files (doesn't work if no initial commit...)
    resethardest = !git reset --hard HEAD && clean -xdf
    spush = stash -u
    spop = stash pop
    sapply = stash apply
    
    # Given a ref, returns merge commits that involved that ref
    ref-merged-by = "!f() { git log --ancestry-path --merges $1..$(git rev-parse --abbrev-ref HEAD); }; f"
    
    # "git rev-parse" not completely correct; see the __gitdir alias in:
    # https://raw.github.com/git/git/master/contrib/completion/git-completion.bash
    updatehooks = !rm -rf $(git rev-parse --git-dir)/hooks && cp -a $CONFIGROOT/templates/hooks $(git rev-parse --git-dir)

    # http://stackoverflow.com/a/10693888/11543
    branch-by-date = for-each-ref --sort=-committerdate refs/heads/ --format='%(refname:short) %(committerdate:short) %(authorname)'

    # Ignore/unignore changes to files (like a local .gitignore)
    # http://durdn.com/blog/2012/11/22/must-have-git-aliases-advanced-examples/
    assume = update-index --assume-unchanged
    unassume = update-index --no-assume-unchanged
    assumed = "!git ls-files -v | grep ^h | cut -c 3-"
    unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"
    assumeall = "!git status -s | awk {'print $2'} | xargs git assume"
    
[bash]
    # If GIT_PS1_SHOWDIRTYSTATE is set and bash.showDirtyState is 1,
    # display dirty state indicator.  (Defaulting to on; disable 
    # in .git/config on very large repositories.)
    showDirtyState = 1

[advice]
    pushNonFastForward = false
    statusHints = true

[push]
    default = upstream

[merge]
    defaultToUpstream = true

[hooks]
    preCommitRegexp = rawlog|console\\.log

[init]
    templatedir = ~/.config/templates

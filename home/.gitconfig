# -*- sh -*-

# Documented in git-config(1).

[user]
    name = Michael Stillwell
    # Modify locally via git config --local user.email mstillwell@workplace.com
    email = mjs@beebo.org

[core]
    excludesfile = ~/.gitignore

[diff]
    mnemonicprefix = true
    compactionHeuristic = true

[alias]
    # Show the object type
    type = cat-file -t
    # e.g. git cat master:path/to/file.txt
    cat = cat-file -p
    stat = status -sb
    reset-hard = reset --hard HEAD
    # Delete untracked files and directories (doesn't work if no commit...)
    reset-harder = !git reset --hard HEAD && git clean -df
    # Delete ignored files (doesn't work if no initial commit...)
    reset-hardest = !git reset --hard HEAD && git clean -xdf
    spush = stash -u
    spop = stash pop
    sapply = stash apply
    st = status --short

    # Given a ref, returns merge commits that involved that ref
    show-merged-by = "!f() { git log --ancestry-path --merges $1..$(git rev-parse --abbrev-ref HEAD); }; f"

    # Like commit branch, but sorted by last modified date
    # http://stackoverflow.com/a/10693888/11543
    branch-by-date = for-each-ref --sort=-committerdate refs/heads/ --format='%(refname:short) %(committerdate:short) %(authorname)'

    # Ignore/unignore changes to files (like a local .gitignore)
    # http://durdn.com/blog/2012/11/22/must-have-git-aliases-advanced-examples/
    assume = update-index --assume-unchanged
    unassume = update-index --no-assume-unchanged
    assumed = "!git ls-files -v | grep ^h | cut -c 3-"
    unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"
    assumeall = "!git status -s | awk {'print $2'} | xargs git assume"

[bash]
    # If GIT_PS1_SHOWDIRTYSTATE is set and bash.showDirtyState is 1,
    # display dirty state indicator.  (Defaulting to on; disable
    # in .git/config on very large repositories.)
    showDirtyState = 1

[advice]
    pushNonFastForward = false
    statusHints = true

[push]
    default = simple

[merge]
    defaultToUpstream = true

[hooks]
    #preCommitRegexp = rawlog|console\\.log

[init]
    templatedir = ~/.dotfiles/templates

[color]
    ui = auto

[filter "lfs"]
    clean = git lfs clean %f
    smudge = git lfs smudge %f
    required = true
[credential]
    # https://help.github.com/articles/caching-your-github-password-in-git/
    helper = osxkeychain

# -*- sh -*-

# Global settings common to all accounts

# NOTE: Do not set PATH here; use the "path" file instead.

alias ls='ls -FBh'
alias dir='ls -l'

alias lconfigure='./configure --prefix=$HOME/local --exec-prefix=$LOCAL'
alias lperlmakefile='perl Makefile.PL LIB=$HOME/local/lib/CPAN INSTALLMAN1DIR=$HOME/local/man/man1 INSTALLMAN3DIR=$HOME/local/man/man3 INSTALLSCRIPT=$HOME/local/lib/CPAN/bin INSTALLDIRS=perl'
alias lperlbuild='perl Build.PL --install_path arch=$LOCAL/lib/CPAN --install_path lib=$HOME/local/lib/CPAN --install_path script=$HOME/local/lib/CPAN/bin --install_path bin=$LOCAL/bin --install_path libdoc=$HOME/local/man/man3 --install_path bindoc=$HOME/local/man/man1'
alias lpython='python setup.py install --prefix $HOME/local/lib/python'
alias tperl='tv --pure-perl'

# bash configuration
if [ -e "$HOME/.careful" ]; then
    export PS1='\e[7m\h:\w\$\e[27m '
elif ( which git >/dev/null ) ; then
    export GIT_PS1_SHOWUPSTREAM=auto
    export GIT_PS1_SHOWDIRTYSTATE=1
    export GIT_PS1_SHOWSTASHSTATE=1
    export PS1='\h:\w$(__git_ps1 "#%s")\$ '
else
    export PS1='\h:\w\$ '
fi    

export FIGNORE='.o:~:.bak'
export CDPATH='.:~:..'
export auto_resume='exact'
export HISTSIZE=10000
export HISTFILESIZE=10000
export HISTIGNORE="fg:bg"
export PROMPT_COMMAND='history -a ; history -n'
export PROMPT_DIRTRIM=3
unset MAILCHECK
set -o notify
shopt -s cdspell
shopt -s histappend
shopt -s no_empty_cmd_completion
shopt -s cmdhist
shopt -s nullglob
# bash 4 only!
#shopt -s globstar

# core defaults
export PAGER='less'
export EDITOR='jed'
#export BROWSER='go'
export VISUAL="$EDITOR"
export TZ="Europe/London"

# switches/options
export UNZIP='-a'
export LESSCHARSET='utf-8'
export LESS='-XMcif'
export RSYNC_RSH='ssh'
export PERLDOC="-otext"
export GREP_OPTIONS="--exclude=.svn --exclude=.git --binary-files=without-match"
export TEXINPUTS="$HOME/local/lib/tex::"
export CLASSPATH=""
export PERL5LIB="$HOME/local/lib/CPAN:$HOME/local/lib/perl"
export PERL5_CPANPLUS_CONFIG="$HOME/.cpanplus/config"
#export RUBYLIB="$LOCAL/lib/ruby/1.8"
# install with gem install --install-dir $GEM_HOME --bindir /usr/local/bin
#export GEM_HOME="/usr/local/lib/ruby/gems/1.8"
export MANPATH="$LOCAL/man:$HOME/local/man::"
export LD_LIBRARY_PATH="$LOCAL/lib:$LD_LIBRARY_PATH"
#export HAXE_LIBRARY_PATH="$HOME/local/lib/haxe/std:."
#export SVNROOT="svn+ssh://svn.beebo.org/srv/svn"
export GITROOT="mjs@grace.beebo.org:/var/lib/git"
export SQLITEROOT="$HOME/.sqlite"
export GOOFEYLOC="http://beebo.org"
export GOOFEYUSER="mjs"
export HTML_TIDY="$HOME/.tidyrc"
#export BASH_COMPLETION="$CONFIG/bash_completion/bash_completion"

# We need to set BASH_ENV so that terminals opened with gnome-terminal's
# "Open Tab" menu item actually source .bashrc.  The bash manpage has
# some discussion of this, but it's still not entirely clear to
# me why this should be necessary...
export BASH_ENV="$HOME/.bashrc"

umask 0002
ulimit -c 0 

# does a recursive "dir" listing, sorting by date
function rdir {
    if [ "$1" != "" ]; then
        n=$1
    else 
        n=30
    fi
    
    find . -name '*' -type f -print0 | xargs -0 ls -lB --sort=time | head -$n
}

# make command immune to hangups (i.e. logging out).
function nohup {
    trap '' 1
    eval "$@"
}

# returns the realpath of a file (see realpath(3))
function realpath {

    # if CDPATH is set (below), path is (sometimes) echoed

    if   [ -d "$1" ]; then
    
      echo `( CDPATH="" cd "$1" 2>/dev/null && pwd -P )`

    elif [ -f "$1" ]; then

      dir=`dirname $1`
      file=`basename $1`
      
      echo `( CDPATH="" cd "$dir" 2>/dev/null && pwd -P)`/"$file"

    else
    
      return 1
    
    fi
      
}
    
# edit file, looking in several different places
function e {

    local args f p

    while [ -n "$1" ]; do

        for p in echo 'type -path' pmpath 'find . -name' END ; do
    
            if [ "$p" = "END" ]; then
                args="$args $1"
		break
            fi

            f=`$p "$1" 2>/dev/null`

            if [ -n "$f" -a -f "$f" ]; then
                args="$args $f"
	        break
            fi

        done

        shift

    done

    eval $EDITOR $args

}

export -f e
